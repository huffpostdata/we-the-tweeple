<!DOCTYPE html>

html lang="en"
  head
    meta charset="utf-8"
    title - We The Tweeple

    meta name="viewport" content="width=device-width, initial-scale=1"

    meta name="description" content="${data.model.sentenceText()}"

    meta property="og:type" content="article"
    meta property="og:size_name" content="The Huffington Post"
    meta property="og:url" content="${data.url_to('share-page', data.model.token)}"
    meta property="og:description" content="${data.model.sentenceText()}"
    meta property="og:title" content="We The Tweeple"
    meta property="og:image" content="${data.url_to('share-image', data.model.token)}"
    meta property="fb:app_id" content="46744042133"

    meta name="twitter:card" content="summary_large_image"
    meta name="twitter:site" content="@HuffPostData"
    meta name="twitter:creator" content="@HuffPostData"
    meta name="twitter:title" content="We The Tweeple"
    meta name="twitter:description" content="${data.model.sentenceText()}"
    meta name="twitter:image" content="${data.url_to('share-image', data.model.token)}"
  body data-search-term="${data.model.token}" style="opacity: 0;"
    script
      ---
      (function() {
        // Share-page hook: load main page
        function fallbackRedirect() {
          window.location = '${data.path_to('index')}#${encodeURIComponent(data.model.token)}';
        }

        function replacePage(newDocument) {
          document.head.innerHTML = newDocument.head.innerHTML;

          // Can't use innerHTML to insert script tags
          // need a temp array: newDocument.body.childNodes will bleed elements
          // as we add them to document.body.
          var nodes = Array.prototype.slice.apply(newDocument.body.childNodes);
          for (var i = 0; i != nodes.length; i++) {
            var node = nodes[i];
            if (node.tagName === 'SCRIPT') {
              var node2 = document.createElement('script');
              node2.src = node.src;
              document.body.appendChild(node2);
            } else {
              document.body.appendChild(node);
            }
          }
        }

        function requestAndReplacePage() {
          var xhr = new XMLHttpRequest();
          xhr.open('GET', '${data.path_to('index')}');
          xhr.timeout = 10000;
          xhr.responseType = 'document';
          xhr.ontimeout = xhr.onerror = xhr.onabort = fallbackRedirect;
          xhr.onload = function() {
            if (xhr.status === 200 || xhr.status === 304) {
              replacePage(xhr.response);
            } else {
              fallbackRedirect();
            }
          };
          xhr.send(null);
        }

        requestAndReplacePage();
      }());
      ---
